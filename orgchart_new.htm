<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head id="Head1">
    <title>Org Chart</title>
    <style type="text/css">
        .selectedNodeClass {
            font-weight: bold;
        }

        .font11text {
            color: #0b4981;
            font-family: Tahoma,Verdana;
            font-size: 11px;
            border: 1px solid blue;
            background-color: steelGray;
            cursor: pointer;
        }

        #visualization1 {
            -webkit-transform: rotate(-90deg);
            -moz-transform: rotate(-90deg);
            transform: rotate(-90deg);
            filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
            float: left;
            text-align: right;
            height: 2800px; /*  this should be the css value from the chart's width. you could set this programmatically with javascript or just take a good guess */
        }

        .google1-visualization-orgchart-node {
            -webkit-transform: rotate(90deg);
            -moz-transform: rotate(90deg);
            transform: rotate(90deg);
            filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=5);
            /* another way to shrink the chart is to use a smaller font which can be styled in this class */
        }

        .google1-visualization-orgchart-space-small {
            /* adjust this height as needed since this is really based on the width of your tree's root element */
            height: 20px;
        }

        .google1-visualization-orgchart-connrow-small {
            /* again this will vary base on how wide your elements are */
            height: 42px;
        }

        .drophighlight {
            border-color: red !important;
        }
    </style>


    <script type='text/javascript' src='http://www.google.com/jsapi'></script>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
    <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
    <style type="text/css">


        .ui-widget {
            font-family: Verdana,Arial,sans-serif;
            font-size: .7em;
        }

        .ui-widget-content {
            background: #F9F9F9;
            border: 1px solid #90d93f;
            color: #222222;
        }
    </style>
    <script type="text/javascript">
        var newid = 1000;
        var mouseovername = "";
        var oldSize;

        $(document).ready(function () {
            $("#visualization").css("height", ($(window).height() - 100) + "px");
            oldSize = parseFloat($("#visualization").css('font-size'));
            $("#spanZoom").html("font size: " + oldSize);

            $("#slider").slider({
                range: "max",
                min: 4,
                max: oldSize,
                value: oldSize,
                step: 1,
                slide: function (event, ui) {
                    var s = ui.value;
                    $("#spanZoom").html("font size: " + s);
                    var newSize = parseInt(s);
                    $("#visualization").animate({ fontSize: newSize }, 200);
                }
            });


        });
    </script>



    <script type="text/javascript">
        google.load('visualization', '1', { packages: ['orgchart'] });
        google.setOnLoadCallback(drawVisualization);

        var userRelation = new Object();
        var userInfo = new Object();
        var init = 0;
        var currentRoot = "";
        var root = "0001";
        function buildDataList() {
            userRelation["0002"] = "0001";
            userRelation["0003"] = "0001";
            userRelation["0004"] = "0002";
            userRelation["0005"] = "0002";
            userRelation["0006"] = "0005";
            userRelation["0007"] = "0005";
            userRelation["0008"] = "0005";
            userRelation["0016"] = "0008";
            userRelation["0017"] = "0008";
            userRelation["0018"] = "0008";

            userRelation["0026"] = "0003";
            userRelation["0027"] = "0003";
            userRelation["0028"] = "0003";
            userRelation["0029"] = "0003";
            userRelation["0030"] = "0003";
            userRelation["0031"] = "0003";

            userRelation["0126"] = "0026";
            userRelation["0127"] = "0026";
            userRelation["0128"] = "0026";
            userRelation["0129"] = "0031";
            userRelation["0130"] = "0031";
            userRelation["0131"] = "0031";

            userRelation["0700"] = "0131";
            userRelation["0701"] = "0131";
            userRelation["0702"] = "0131";

            userRelation["0800"] = "0702";
            userRelation["0801"] = "0702";
            userRelation["0802"] = "0702";
            userRelation["0803"] = "0702";

            userInfo["0001"] = "Smith, John|President|PS21";
            userInfo["0002"] = "Chin, Dennis|VP|DOE";
            userInfo["0003"] = "Vista, Cindy|Associate|PS21";
            userInfo["0004"] = "Anwar, George|VP|PS193";
            userInfo["0005"] = "Espo, Larun|Consultant|DOE";
            userInfo["0006"] = "Joe, Peter|Consultant|DOE";
            userInfo["0007"] = "Schamis, Michelle|Consultant|DOE";
            userInfo["0008"] = "Kolli, Zalleia|Consultant|DOE";
            userInfo["0016"] = "Apoda, George|AVP|PS123";
            userInfo["0017"] = "Macalle, Jordan|AVP|PS123";
            userInfo["0018"] = "Dyadav, Indo|AVP|PS123";

            userInfo["0026"] = "Barley, Clara|ED Admin|PS434";
            userInfo["0027"] = "Trem, Nelly|ED Admin|PS434";
            userInfo["0028"] = "Traddles, Tommy|ED Admin|PS434";
            userInfo["0029"] = "Havisham, Estella|ED Admin|PS434";
            userInfo["0030"] = "Wemmick, John|ED Admin|PS434";
            userInfo["0031"] = "Gargery, Joe|ED Admin|PS434";

            userInfo["0126"] = "Wang, Sandy|AVP|PS123";
            userInfo["0127"] = "tusa, Jenny|AVP|PS123";
            userInfo["0128"] = "Nayak, Tim|AVP|PS123";
            userInfo["0129"] = "Kolli, Sam|AVP|PS123";
            userInfo["0130"] = "Esposito, Mula|AVP|PS123";
            userInfo["0131"] = "Hermen, Tan|AVP|PS123";

            userInfo["0700"] = "Kanagari, King|Assistant|PS109";
            userInfo["0701"] = "Caler, Miller|Assistant|PS109";
            userInfo["0702"] = "Zhong, Tiffnay|Assistant|PS109";

            userInfo["0800"] = "Stydahar, Stancy|Execution|PS213";
            userInfo["0801"] = "Nayai, Jessica|Execution|PS213";
            userInfo["0802"] = "Jin, Cachie|Execution|PS213";
            userInfo["0803"] = "Brendy, Sara|Execution|PS213";
        }

        function IsChild(selfname, parentname) {
            if (userRelation[selfname] == parentname) { return true; }
            else {
                if (userRelation[selfname] == root) { return false; }
                else { return IsChild(userRelation[selfname], parentname); }
            }
        }

        function ChildLevel(selfname, parentname) {
            if (userRelation[selfname] == parentname) { return 1; }
            else {
                if (userRelation[selfname] == root) { return 1000; }
                else { return ChildLevel(userRelation[selfname], parentname) + 1; }
            }
        }
        function HasChild(name) {
            for (var key in userRelation) {
                if (userRelation[key] == name) {
                    return true;
                }
            }
            return false;
        }
        function ReturnToUpperLevel(level) {
            if (level == 0) { drawVisualization(); }
            else {
                drawVisualization(userRelation[currentRoot]);
            }
        }
        function deleteNode(userId) {
            delete userRelation[userId];
            drawVisualization(userRelation[currentRoot]);
        }
        function editUser(userId) {
            var userDetail = userInfo[userId].split("|");
            $("#hidUserId").val(userId);
            $("#txtName").val(userDetail[0]);
            $("#lstTitle").val(userDetail[1]);
            $("#txtLocation").val(userDetail[2]);

            $("#btnSave").show();
            $("#btnAdd").show();
            $("#btnSaveSub").hide();
            $("#editdialog").dialog({
                height: 200,
                width: 350,
                modal: true,
                resizable: true,
                dialogClass: 'no-close success-dialog'
            });
        }

        function addNode() {
            var userId = $("#hidUserId").val();
            $("#txtName").val("");
            $("#lstTitle").val("");
            $("#txtLocation").val("");

            $("#btnSave").hide();
            $("#btnAdd").hide();
            $("#btnSaveSub").show();
        }
        function cancelEdit() {
            $("#editdialog").dialog("close");
            
        }
        function saveEdit() {
            var userId = $("#hidUserId").val();
            var userDetail = $("#txtName").val() + "|" + $("#lstTitle").val() + "|" + $("#txtLocation").val();
            userInfo[userId] = userDetail;
            $("#editdialog").dialog("close");
            drawVisualization(currentRoot);
        }
        function SaveSubNode() {
            var userId = $("#hidUserId").val();
            if ($("#txtName").val() == "") {
                alert("please enter the name");
                return;
            }
            userInfo["" + newid] = $("#txtName").val() + "|" + $("#lstTitle").val() + "|" + $("#txtLocation").val();
            userRelation["" + newid] = userId;
            newid++;
            $("#editdialog").dialog("close");

            drawVisualization(currentRoot);

        }
        function drawVisualization(rootNode) {

            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Name');
            data.addColumn('string', 'Manager');
            data.addColumn('string', 'tooltip');

            if (init == 0) {
                init = 1;
                buildDataList();
            }
            var maxChildLeve = 100; // $("#lstLevel").val();
            if (typeof (rootNode) != "string" || rootNode == "") {
                rootNode = root;
            }
            currentRoot = rootNode;
            for (var key in userRelation) {
                if (ChildLevel(key, rootNode) <= parseInt(maxChildLeve)) {
                    var userId = key;
                    var managerId = userRelation[key];
                    var htmIconManager = "";
                    if (rootNode != root && managerId == rootNode) {
                        htmIconManager = " &nbsp <span style='cursor:pointer;' onclick='ReturnToUpperLevel(1)'>▲</span>";
                    }
                    else if (managerId != root && HasChild(managerId)) {
                        htmIconManager = " &nbsp <span style=\"cursor:pointer;\" onclick=\"drawVisualization('" + managerId + "')\">📌</span>";
                    }
                    var htmIconUser = "";
                    if (HasChild(userId)) {
                        htmIconUser = " &nbsp <span style=\"cursor:pointer;\" onclick=\"drawVisualization('" + userId + "')\">📌</span>";
                    }
                    else {
                        htmIconUser = " &nbsp <span style=\"cursor:pointer;\" onclick=\"deleteNode('" + userId + "')\">♻</span>";
                    }
                    var userDetail = userInfo[userId].split("|");
                    var userNode = "<span style='white-space:nowrap;'><b><span uid=\"" + userId + "\"></span><span style='cursor:pointer;' onclick=\"editUser('" + userId + "')\">" + userDetail[0] + "</span></b>" + htmIconUser + "<br>" + userDetail[1] + "<br>" + userDetail[2] + "</span>";
                    var tooptip = userDetail[0] + "\n" + userDetail[1] + "\n" + userDetail[2];
                    var managerDetail = userInfo[managerId].split("|");
                    var managerNode = "<span style='white-space:nowrap;'><b><span uid=\"" + managerId + "\"></span><span style='cursor:pointer;' onclick=\"editUser('" + managerId + "')\">" + managerDetail[0] + "</span></b>" + htmIconManager + "<br>" + managerDetail[1] + "<br>" + managerDetail[2] + "</span>";

                    data.addRows([[userNode, managerNode, tooptip]]);
                }
            }

            var orgchart = new google.visualization.OrgChart(document.getElementById('visualization'));
            var options = { allowHtml: true, size: "small", allowCollapse: true };
            var options = { allowHtml: true, size: "small", allowCollapse: true };
            orgchart.draw(data, options);   //{allowHtml:true;allowCollapse:true;selectedNodeClass:selectedNodeClass;}//, nodeClass: "font11text", selectedNodeClass: "selectedNodeClass"

            $(".google-visualization-orgchart-node").draggable({
                revert: "invalid",
                stack: ".draggable",
                helper: 'clone'
            });
            $('.google-visualization-orgchart-node').droppable({
                over: function (event, ui) {
                    $(this).addClass("drophighlight");
                },
                out: function (event, ui) {
                    $(this).removeClass("drophighlight");
                },
                drop: function (event, ui) {
                    var droppable = $(this);
                    var draggable = ui.draggable;
                    var managerId = droppable.html();
                    managerId = managerId.substring(managerId.indexOf("uid=\"") + 5, managerId.length);
                    managerId = managerId.substring(0, managerId.indexOf("\""));
                    var userId = draggable.html();
                    userId = userId.substring(userId.indexOf("uid=\"") + 5, userId.length);
                    userId = userId.substring(0, userId.indexOf("\""));
                    if (userRelation[userId] != null && userRelation[userId] != managerId && userRelation[managerId] != userId && IsChild(managerId, userId) == false) {
                        var userName = userInfo[userId].split("|")[0];
                        var managerName = userInfo[managerId].split("|")[0];
                        if (confirm("Are you sure to make " + userName + " report to " + managerName + "?")) {
                            userRelation[userId] = managerId;
                            drawVisualization(currentRoot);
                        }
                        else {
                            $(this).removeClass("drophighlight");
                        }
                    }

                }
            });

        }
    </script>
</head>
<body>
    <form name="form1" method="post">
        <div id="visualization" style="overflow:auto;width:100%;height:500px;border:solid 1px black;font-size:20px;">

        </div>
        <br />
        <div style="width:100%;text-align:center;">
            <table cellpadding="0" cellspacing="2" align="center" border="0">
                <tr>
                    <td>
                        <div id="slider" style="background-color:#0000FF;width:250px;height:5px;margin-right:20px;"></div>
                    </td>
                    <td>
                        <span style="font-family:Arial;font-size:11px;font-weight:bold;" id="spanZoom">15</span>
                    </td>
                </tr>

            </table>
        </div>
        <div id="editdialog" title="Edit" style="display:none;">
            <input type="hidden" id="hidUserId" />
            <table cellpadding="4" cellspacing="4">
                <tr>
                    <td><b>Name:</b></td>
                    <td><input type="text" id="txtName" width="45" /></td>
                </tr>
                <tr>
                    <td><b>Title:</b></td>
                    <td>
                        <select id="lstTitle">
                            <option>President</option>
                            <option>VP</option>
                            <option>ED Admin</option>
                            <option>AVP</option>
                            <option>Consultant</option>

                        </select>
                    </td>
                </tr>
                <tr>
                    <td><b>Location:</b></td>
                    <td>
                        <input type="text" id="txtLocation" width="45" />
                    </td>
                </tr>
                <tr>
                    <td colspan="2" align="center">
                        <input type="button" id="btnSave" value="Save" onclick="saveEdit()" />
                        <input type="button" id="btnAdd" value="Add Subnode" onclick="addNode()" />
                        <input type="button" id="btnSaveSub" value="Save Subnode" onclick="SaveSubNode()" style="display:none;" />
                        <input type="button" id="btnCancel" value="Cancel" onclick="cancelEdit()" />

                    </td>
                </tr>
            </table>
        </div>

    </form>

</body>
</html>
